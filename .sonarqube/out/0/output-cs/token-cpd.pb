∑ï
1D:\Workspace\personal\repo\DockpaneSearch.xaml.cs
	namespace%% 	
TAGCatalogoImagens%%
 
{&& 
public** 

partial** 
class** 
DockpaneSearchView** +
:**, -
UserControl**. 9
{++ 
private,, 
MapView,, 
mapView,, 
;,,  
private-- 
IDisposable-- 
_graphic-- $
;--$ %
private.. 
List.. 
<.. 
SceneDetails.. !
>..! "
scenes..# )
;..) *
private// 
CIMPolygonSymbol//  
polygonSymbol//! .
;//. /
public11 
DockpaneSearchView11 !
(11! "
)11" #
{22 	
InitializeComponent33 
(33  
)33  !
;33! "
SliderCloudCover44 
.44 
Value44 "
=44# $
$num44% (
;44( )
SliderOffNadir55 
.55 
Value55  
=55! "
$num55# %
;55% &
SliderResolution66 
.66 
Value66 "
=66# $
$num66% '
;66' (
mapView88 
=88 
MapView88 
.88 
Active88 $
;88$ %
scenes99 
=99 
new99 
List99 
<99 
SceneDetails99 *
>99* +
(99+ ,
)99, -
;99- .
var;; 
trans;; 
=;; 
$num;; 
;;; 
	CIMStroke<< 
outline<< 
=<< 
SymbolFactory<<  -
.<<- .
Instance<<. 6
.<<6 7
ConstructStroke<<7 F
(<<F G
CIMColor<<G O
.<<O P
CreateRGBColor<<P ^
(<<^ _
$num<<_ `
,<<` a
$num<<b c
,<<c d
$num<<e f
,<<f g
trans<<h m
)<<m n
,<<n o
$num<<p s
,<<s t
SimpleLineStyle	<<u Ñ
.
<<Ñ Ö
Solid
<<Ö ä
)
<<ä ã
;
<<ã å
var?? 
solid?? 
=?? 
SymbolFactory?? %
.??% &
Instance??& .
.??. /
ConstructStroke??/ >
(??> ?
CIMColor??? G
.??G H
CreateRGBColor??H V
(??V W
$num??W Z
,??Z [
$num??\ ]
,??] ^
$num??_ `
,??` a
trans??b g
)??g h
,??h i
$num??j m
,??m n
SimpleLineStyle??o ~
.??~ 
Solid	?? Ñ
)
??Ñ Ö
;
??Ö Ü
CIMFillBB 
[BB 
]BB 
diagonalCrossBB #
=BB$ %
{BB& '
newCC 
CIMHatchFillCC  
(CC  !
)CC! "
{CC# $
EnableDD 
=DD 
trueDD !
,DD! "
RotationEE 
=EE 
$numEE #
,EE# $

SeparationFF 
=FF  
$numFF! $
,FF$ %

LineSymbolGG 
=GG  
newGG! $
CIMLineSymbolGG% 2
(GG2 3
)GG3 4
{GG5 6
SymbolLayersGG7 C
=GGD E
newGGF I
CIMSymbolLayerGGJ X
[GGX Y
$numGGY Z
]GGZ [
{GG\ ]
solidGG^ c
}GGd e
}GGf g
}HH 
,HH 
newII 
CIMHatchFillII  
(II  !
)II! "
{II# $
EnableJJ 
=JJ 
trueJJ !
,JJ! "
RotationKK 
=KK 
-KK  
$numKK  $
,KK$ %

SeparationLL 
=LL  
$numLL! $
,LL$ %

LineSymbolMM 
=MM  
newMM! $
CIMLineSymbolMM% 2
(MM2 3
)MM3 4
{MM5 6
SymbolLayersMM7 C
=MMD E
newMMF I
CIMSymbolLayerMMJ X
[MMX Y
$numMMY Z
]MMZ [
{MM\ ]
solidMM^ c
}MMd e
}MMf g
}NN 
}OO 
;OO 
ListQQ 
<QQ 
CIMSymbolLayerQQ 
>QQ  
symbolLayersQQ! -
=QQ. /
newQQ0 3
ListQQ4 8
<QQ8 9
CIMSymbolLayerQQ9 G
>QQG H
{QQI J
outlineQQK R
}QQS T
;QQT U
foreachSS 
(SS 
varSS 
fillSS 
inSS  
diagonalCrossSS! .
)SS. /
symbolLayersTT 
.TT 
AddTT  
(TT  !
fillTT! %
)TT% &
;TT& '
polygonSymbolVV 
=VV 
newVV 
CIMPolygonSymbolVV  0
(VV0 1
)VV1 2
{VV3 4
SymbolLayersVV5 A
=VVB C
symbolLayersVVD P
.VVP Q
ToArrayVVQ X
(VVX Y
)VVY Z
}VV[ \
;VV\ ]
}WW 	
publicYY 
classYY 
SceneDetailsYY !
:YY" #"
INotifyPropertyChangedYY$ :
{ZZ 	
public[[ 
event[[ '
PropertyChangedEventHandler[[ 4
PropertyChanged[[5 D
;[[D E
public]] 
string]] 
sceneFeatureID]] (
{]]) *
get]]+ .
;]]. /
set]]0 3
;]]3 4
}]]5 6
private__ 
bool__ 
_sceneSelected__ '
;__' (
public`` 
bool`` 
sceneSelected`` %
{``& '
getaa 
{aa 
returnaa 
_sceneSelectedaa +
;aa+ ,
}aa- .
setbb 
{bb 
_sceneSelectedcc "
=cc# $
valuecc% *
;cc* +
OnPropertyChangeddd %
(dd% &
$strdd& 5
)dd5 6
;dd6 7
}ee 
}ff 
publicgg 
stringgg 
sceneSatellitegg (
{gg) *
getgg+ .
;gg. /
setgg0 3
;gg3 4
}gg5 6
publichh 
stringhh 
	sceneDatehh #
{hh$ %
gethh& )
;hh) *
sethh+ .
;hh. /
}hh0 1
publicii 
doubleii 
sceneResolutionii )
{ii* +
getii, /
;ii/ 0
setii1 4
;ii4 5
}ii6 7
publicjj 
doublejj 
sceneCloudCoverjj )
{jj* +
getjj, /
;jj/ 0
setjj1 4
;jj4 5
}jj6 7
publickk 
doublekk 
sceneOffNadirkk '
{kk( )
getkk* -
;kk- .
setkk/ 2
;kk2 3
}kk4 5
publicmm 
ArcGISmm 
.mm 
Coremm 
.mm 
Geometrymm '
.mm' (
Geometrymm( 0
sceneGeometrymm1 >
{mm? @
getmmA D
;mmD E
setmmF I
;mmI J
}mmK L
	protectedoo 
voidoo 
OnPropertyChangedoo ,
(oo, -
stringoo- 3
nameoo4 8
)oo8 9
{pp '
PropertyChangedEventHandlerqq +
handlerqq, 3
=qq4 5
PropertyChangedqq6 E
;qqE F
ifrr 
(rr 
handlerrr 
!=rr 
nullrr #
)rr# $
{ss 
handlertt 
(tt 
thistt  
,tt  !
newtt" %$
PropertyChangedEventArgstt& >
(tt> ?
namett? C
)ttC D
)ttD E
;ttE F
}uu 
}vv 
}ww 	
publicyy 
staticyy 
stringyy 
CreateRandomWordyy -
{zz 	
get{{ 
{|| 
Random}} 
rnd}} 
=}} 
new}}  
Random}}! '
(}}' (
)}}( )
;}}) *
string 
[ 
] 
words 
=  
{! "
$str# )
,) *
$str+ 2
,2 3
$str4 <
,< =
$str> D
,D E
$strF L
,L M
$strN T
}U V
;V W
int
ÅÅ 
randomNumber
ÅÅ  
=
ÅÅ! "
rnd
ÅÅ# &
.
ÅÅ& '
Next
ÅÅ' +
(
ÅÅ+ ,
$num
ÅÅ, 0
,
ÅÅ0 1
$num
ÅÅ2 6
)
ÅÅ6 7
;
ÅÅ7 8
string
ÉÉ 
randomString
ÉÉ #
=
ÉÉ$ %
$"
ÉÉ& (
{
ÉÉ( )
words
ÉÉ) .
[
ÉÉ. /
rnd
ÉÉ/ 2
.
ÉÉ2 3
Next
ÉÉ3 7
(
ÉÉ7 8
$num
ÉÉ8 9
,
ÉÉ9 :
words
ÉÉ; @
.
ÉÉ@ A
Length
ÉÉA G
)
ÉÉG H
]
ÉÉH I
}
ÉÉI J
{
ÉÉJ K
randomNumber
ÉÉK W
}
ÉÉW X
"
ÉÉX Y
;
ÉÉY Z
return
ÖÖ 
randomString
ÖÖ #
;
ÖÖ# $
}
áá 
}
àà 	
private
ää 
async
ää 
void
ää 
BtnLoad_Click
ää (
(
ää( )
object
ää) /
sender
ää0 6
,
ää6 7
RoutedEventArgs
ää8 G
e
ääH I
)
ääI J
{
ãã 	
var
çç 
map
çç 
=
çç 
MapView
çç 
.
çç 
Active
çç $
.
çç$ %
Map
çç% (
;
çç( )
if
éé 
(
éé 
map
éé 
!=
éé 
null
éé 
)
éé 
{
èè 
IReadOnlyList
êê 
<
êê 
WMSLayer
êê &
>
êê& '
	wmsLayers
êê( 1
=
êê2 3
map
êê4 7
.
êê7 8
Layers
êê8 >
.
êê> ?
OfType
êê? E
<
êêE F
WMSLayer
êêF N
>
êêN O
(
êêO P
)
êêP Q
.
êêQ R
ToList
êêR X
(
êêX Y
)
êêY Z
;
êêZ [
if
ëë 
(
ëë 
	wmsLayers
ëë 
!=
ëë  
null
ëë! %
)
ëë% &
foreach
íí 
(
íí 
var
íí  
wmsLayer
íí! )
in
íí* ,
	wmsLayers
íí- 6
)
íí6 7
await
ìì 

QueuedTask
ìì (
.
ìì( )
Run
ìì) ,
(
ìì, -
(
ìì- .
)
ìì. /
=>
ìì0 2
{
ìì3 4
map
ìì5 8
.
ìì8 9
RemoveLayer
ìì9 D
(
ììD E
wmsLayer
ììE M
)
ììM N
;
ììN O
}
ììP Q
)
ììQ R
;
ììR S
}
îî 
string
óó 

featureIDs
óó 
=
óó 
$str
óó  "
;
óó" #
foreach
òò 
(
òò 
SceneDetails
òò !
item
òò" &
in
òò' )
GridSearchResult
òò* :
.
òò: ;
ItemsSource
òò; F
)
òòF G
if
ôô 
(
ôô 
item
ôô 
.
ôô 
sceneSelected
ôô &
==
ôô' )
true
ôô* .
)
ôô. /

featureIDs
öö 
+=
öö !
(
öö" #

featureIDs
öö# -
==
öö. 0
$str
öö1 3
)
öö3 4
?
öö5 6
item
öö7 ;
.
öö; <
sceneFeatureID
öö< J
:
ööK L
$str
ööM P
+
ööQ R
item
ööS W
.
ööW X
sceneFeatureID
ööX f
;
ööf g
try
ùù 
{
ûû 
var
üü 
serverConnection
üü $
=
üü% &
new
üü' *)
CIMInternetServerConnection
üü+ F
{
üüG H
URL
†† 
=
†† 
$str
†† `
+
††a b
txtConnectID
††c o
.
††o p
Password
††p x
,
††x y
User
°° 
=
°° 
txtUser
°° "
.
°°" #
Text
°°# '
,
°°' (
Password
¢¢ 
=
¢¢ 
txtPass
¢¢ &
.
¢¢& '
Password
¢¢' /
}
££ 
;
££ 
var
§§ 

connection
§§ 
=
§§  
new
§§! $%
CIMWMSServiceConnection
§§% <
{
§§= >
ServerConnection
§§? O
=
§§P Q
serverConnection
§§R b
,
§§b c
	LayerName
§§d m
=
§§n o
$str§§p Ü
}§§á à
;§§à â!
LayerCreationParams
¶¶ #

parameters
¶¶$ .
=
¶¶/ 0
new
¶¶1 4!
LayerCreationParams
¶¶5 H
(
¶¶H I

connection
¶¶I S
)
¶¶S T
;
¶¶T U

parameters
ßß 
.
ßß %
ServiceCustomParameters
ßß 2
=
ßß3 4
new
ßß5 8

Dictionary
ßß9 C
<
ßßC D
string
ßßD J
,
ßßJ K
string
ßßL R
>
ßßR S
{
ßßT U
{
ßßV W
$str
ßßX k
,
ßßk l

featureIDs
ßßm w
}
ßßx y
}
ßßz {
;
ßß{ |

parameters
®® 
.
®®  
AutoZoomOnEmptyMap
®® -
=
®®. /
true
®®0 4
;
®®4 5

parameters
©© 
.
©© 
MapMemberPosition
©© ,
=
©©- .
MapMemberPosition
©©/ @
.
©©@ A
AddToTop
©©A I
;
©©I J
await
´´ 

QueuedTask
´´  
.
´´  !
Run
´´! $
(
´´$ %
(
´´% &
)
´´& '
=>
´´( *
{
¨¨ 
var
≠≠ 
compositeLyr
≠≠ $
=
≠≠% &
LayerFactory
≠≠' 3
.
≠≠3 4
Instance
≠≠4 <
.
≠≠< =
CreateLayer
≠≠= H
<
≠≠H I
WMSLayer
≠≠I Q
>
≠≠Q R
(
≠≠R S

parameters
≠≠S ]
,
≠≠] ^
MapView
≠≠_ f
.
≠≠f g
Active
≠≠g m
.
≠≠m n
Map
≠≠n q
)
≠≠q r
;
≠≠r s
var
ÆÆ 
	wmsLayers
ÆÆ !
=
ÆÆ" #
compositeLyr
ÆÆ$ 0
.
ÆÆ0 1
Layers
ÆÆ1 7
[
ÆÆ7 8
$num
ÆÆ8 9
]
ÆÆ9 :
as
ÆÆ; =&
ServiceCompositeSubLayer
ÆÆ> V
;
ÆÆV W
}
ØØ 
)
ØØ 
;
ØØ 
}
∞∞ 
catch
±± 
(
±± 
	Exception
±± 
ex
±± 
)
±±  
{
≤≤ 

MessageBox
≥≥ 
.
≥≥ 
Show
≥≥ 
(
≥≥  
$@"
≥≥  #
$str
≥≥# *
{
≥≥* +
ex
≥≥+ -
}
≥≥- .
"
≥≥. /
)
≥≥/ 0
;
≥≥0 1
}
¥¥ 
}
µµ 	
private
∑∑ 
async
∑∑ 
void
∑∑ 
BtnClear_Click
∑∑ )
(
∑∑) *
object
∑∑* 0
sender
∑∑1 7
,
∑∑7 8
RoutedEventArgs
∑∑9 H
e
∑∑I J
)
∑∑J K
{
∏∏ 	
scenes
ππ 
.
ππ 
Clear
ππ 
(
ππ 
)
ππ 
;
ππ 
this
∫∫ 
.
∫∫ 

Dispatcher
∫∫ 
.
∫∫ 
Invoke
∫∫ "
(
∫∫" #
(
∫∫# $
)
∫∫$ %
=>
∫∫& (
{
∫∫) *
GridSearchResult
∫∫+ ;
.
∫∫; <
ItemsSource
∫∫< G
=
∫∫H I
new
∫∫J M
List
∫∫N R
<
∫∫R S
SceneDetails
∫∫S _
>
∫∫_ `
(
∫∫` a
)
∫∫a b
;
∫∫b c
}
∫∫d e
)
∫∫e f
;
∫∫f g
var
ºº 
map
ºº 
=
ºº 
MapView
ºº 
.
ºº 
Active
ºº $
.
ºº$ %
Map
ºº% (
;
ºº( )
if
ΩΩ 
(
ΩΩ 
map
ΩΩ 
!=
ΩΩ 
null
ΩΩ 
)
ΩΩ 
{
ææ 
IReadOnlyList
øø 
<
øø 
WMSLayer
øø &
>
øø& '
	wmsLayers
øø( 1
=
øø2 3
map
øø4 7
.
øø7 8
Layers
øø8 >
.
øø> ?
OfType
øø? E
<
øøE F
WMSLayer
øøF N
>
øøN O
(
øøO P
)
øøP Q
.
øøQ R
ToList
øøR X
(
øøX Y
)
øøY Z
;
øøZ [
if
¿¿ 
(
¿¿ 
	wmsLayers
¿¿ 
!=
¿¿  
null
¿¿! %
)
¿¿% &
foreach
¡¡ 
(
¡¡ 
var
¡¡  
wmsLayer
¡¡! )
in
¡¡* ,
	wmsLayers
¡¡- 6
)
¡¡6 7
await
¬¬ 

QueuedTask
¬¬ (
.
¬¬( )
Run
¬¬) ,
(
¬¬, -
(
¬¬- .
)
¬¬. /
=>
¬¬0 2
{
¬¬3 4
map
¬¬5 8
.
¬¬8 9
RemoveLayer
¬¬9 D
(
¬¬D E
wmsLayer
¬¬E M
)
¬¬M N
;
¬¬N O
}
¬¬P Q
)
¬¬Q R
;
¬¬R S
}
√√ 
}
ƒƒ 	
private
∆∆ 
async
∆∆ 
void
∆∆ 
BtnSearch_Click
∆∆ *
(
∆∆* +
object
∆∆+ 1
sender
∆∆2 8
,
∆∆8 9
RoutedEventArgs
∆∆: I
e
∆∆J K
)
∆∆K L
{
«« 	
double
»» 

cloudCover
»» 
=
»» 
$num
»»  !
;
»»! "
double
…… 
offNadir
…… 
=
…… 
$num
…… 
;
……  
double
   

resolution
   
=
   
$num
    !
;
  ! "
this
ÃÃ 
.
ÃÃ 

Dispatcher
ÃÃ 
.
ÃÃ 
Invoke
ÃÃ "
(
ÃÃ" #
(
ÃÃ# $
)
ÃÃ$ %
=>
ÃÃ& (
{
ÃÃ) *
GridSearchResult
ÕÕ  
.
ÕÕ  !
ItemsSource
ÕÕ! ,
=
ÕÕ- .
new
ÕÕ/ 2
List
ÕÕ3 7
<
ÕÕ7 8
SceneDetails
ÕÕ8 D
>
ÕÕD E
(
ÕÕE F
)
ÕÕF G
;
ÕÕG H
GridSearchResult
ŒŒ  
.
ŒŒ  !
	IsEnabled
ŒŒ! *
=
ŒŒ+ ,
false
ŒŒ- 2
;
ŒŒ2 3
BtnClear
–– 
.
–– 
	IsEnabled
–– "
=
––# $
false
––% *
;
––* +
BtnSave
—— 
.
—— 
	IsEnabled
—— !
=
——" #
false
——$ )
;
——) *
	BtnSearch
““ 
.
““ 
	IsEnabled
““ #
=
““$ %
true
““& *
;
““* +

cloudCover
‘‘ 
=
‘‘ 
double
‘‘ #
.
‘‘# $
Parse
‘‘$ )
(
‘‘) *
SliderCloudCover
‘‘* :
.
‘‘: ;
Value
‘‘; @
.
‘‘@ A
ToString
‘‘A I
(
‘‘I J
)
‘‘J K
)
‘‘K L
;
‘‘L M
offNadir
’’ 
=
’’ 
double
’’ !
.
’’! "
Parse
’’" '
(
’’' (
SliderOffNadir
’’( 6
.
’’6 7
Value
’’7 <
.
’’< =
ToString
’’= E
(
’’E F
)
’’F G
)
’’G H
;
’’H I

resolution
÷÷ 
=
÷÷ 
double
÷÷ #
.
÷÷# $
Parse
÷÷$ )
(
÷÷) *
SliderResolution
÷÷* :
.
÷÷: ;
Value
÷÷; @
.
÷÷@ A
ToString
÷÷A I
(
÷÷I J
)
÷÷J K
)
÷÷K L
;
÷÷L M
}
◊◊ 
)
◊◊ 
;
◊◊ 
mapView
ŸŸ 
=
ŸŸ 
MapView
ŸŸ 
.
ŸŸ 
Active
ŸŸ $
;
ŸŸ$ %
if
⁄⁄ 
(
⁄⁄ 
mapView
⁄⁄ 
!=
⁄⁄ 
null
⁄⁄ 
)
⁄⁄  
{
€€ 
var
‹‹ 
	mapExtent
‹‹ 
=
‹‹ 
GeometryEngine
‹‹  .
.
‹‹. /
Instance
‹‹/ 7
.
‹‹7 8
Project
‹‹8 ?
(
‹‹? @
mapView
‹‹@ G
.
‹‹G H
Extent
‹‹H N
,
‹‹N O
SpatialReferences
‹‹P a
.
‹‹a b
WGS84
‹‹b g
)
‹‹g h
;
‹‹h i
var
›› 
bbox
›› 
=
›› 
	mapExtent
›› $
.
››$ %
Extent
››% +
.
››+ ,
YMin
››, 0
.
››0 1
ToString
››1 9
(
››9 :
)
››: ;
.
››; <
Replace
››< C
(
››C D
$str
››D G
,
››G H
$str
››I L
)
››L M
+
››N O
$str
››P S
+
››T U
	mapExtent
››V _
.
››_ `
Extent
››` f
.
››f g
XMin
››g k
.
››k l
ToString
››l t
(
››t u
)
››u v
.
››v w
Replace
››w ~
(
››~ 
$str›› Ç
,››Ç É
$str››Ñ á
)››á à
+››â ä
$str››ã é
+››è ê
	mapExtent
ﬁﬁ '
.
ﬁﬁ' (
Extent
ﬁﬁ( .
.
ﬁﬁ. /
YMax
ﬁﬁ/ 3
.
ﬁﬁ3 4
ToString
ﬁﬁ4 <
(
ﬁﬁ< =
)
ﬁﬁ= >
.
ﬁﬁ> ?
Replace
ﬁﬁ? F
(
ﬁﬁF G
$str
ﬁﬁG J
,
ﬁﬁJ K
$str
ﬁﬁL O
)
ﬁﬁO P
+
ﬁﬁQ R
$str
ﬁﬁS V
+
ﬁﬁW X
	mapExtent
ﬁﬁY b
.
ﬁﬁb c
Extent
ﬁﬁc i
.
ﬁﬁi j
XMax
ﬁﬁj n
.
ﬁﬁn o
ToString
ﬁﬁo w
(
ﬁﬁw x
)
ﬁﬁx y
.
ﬁﬁy z
Replaceﬁﬁz Å
(ﬁﬁÅ Ç
$strﬁﬁÇ Ö
,ﬁﬁÖ Ü
$strﬁﬁá ä
)ﬁﬁä ã
;ﬁﬁã å
var
‡‡ 

serviceUrl
‡‡ 
=
‡‡  
$str
‡‡! `
;
‡‡` a
string
·· !
authenticationToken
·· *
=
··+ ,
System
··- 3
.
··3 4
Convert
··4 ;
.
··; <
ToBase64String
··< J
(
··J K
Encoding
··K S
.
··S T
GetEncoding
··T _
(
··_ `
$str
··` l
)
··l m
.
··m n
GetBytes
··n v
(
··v w
txtUser
··w ~
.
··~ 
Text·· É
+··Ñ Ö
$str··Ü â
+··ä ã
txtPass··å ì
.··ì î
Password··î ú
)··ú ù
)··ù û
;··û ü
var
„„ 
queryParameters
„„ #
=
„„$ %
new
„„& )

Dictionary
„„* 4
<
„„4 5
string
„„5 ;
,
„„; <
string
„„= C
>
„„C D
(
„„D E
)
„„E F
{
„„G H
{
‰‰ 
$str
‰‰ 
,
‰‰  
$str
‰‰! -
}
‰‰. /
,
‰‰/ 0
{
ÂÂ 
$str
ÂÂ  
,
ÂÂ  !
$str
ÂÂ" @
}
ÂÂA B
,
ÂÂB C
{
ÊÊ 
$str
ÊÊ 
,
ÊÊ  
$str
ÊÊ! &
}
ÊÊ' (
,
ÊÊ( )
{
ÁÁ 
$str
ÁÁ 
,
ÁÁ  
$str
ÁÁ! (
}
ÁÁ) *
,
ÁÁ* +
{
ËË 
$str
ËË !
,
ËË! "
txtConnectID
ËË# /
.
ËË/ 0
Password
ËË0 8
}
ËË9 :
,
ËË: ;
{
ÈÈ 
$str
ÈÈ 
,
ÈÈ  
$str
ÈÈ! ,
}
ÈÈ- .
,
ÈÈ. /
{
ÍÍ 
$str
ÍÍ &
,
ÍÍ& '
$str
ÍÍ( 9
}
ÍÍ: ;
,
ÍÍ; <
{
ÎÎ 
$str
ÎÎ 
,
ÎÎ 
$str
ÎÎ %
}
ÎÎ& '
,
ÎÎ' (
{
ÏÏ 
$str
ÏÏ 
,
ÏÏ 
$str
ÏÏ  &
}
ÏÏ' (
,
ÏÏ( )
{
ÌÌ 
$str
ÌÌ "
,
ÌÌ" #
$str
ÌÌ$ 4
+
ÌÌ5 6
bbox
ÌÌ7 ;
+
ÌÌ< =
$str
ÌÌ> P
+
ÌÌQ R
SliderCloudCover
ÌÌS c
.
ÌÌc d
Value
ÌÌd i
+
ÌÌj k
$str
ÌÌl o
}
ÌÌp q
,
ÌÌq r
{
ÓÓ 
$str
ÓÓ $
,
ÓÓ$ %
$str
ÓÓ& ,
}
ÓÓ- .
,
ÓÓ. /
{
ÔÔ 
CreateRandomWord
ÔÔ &
,
ÔÔ& '
$str
ÔÔ( *
}
ÔÔ+ ,
}
 
;
 
var
ÒÒ 
encodedContent
ÒÒ "
=
ÒÒ# $
new
ÒÒ% (#
FormUrlEncodedContent
ÒÒ) >
(
ÒÒ> ?
queryParameters
ÒÒ? N
)
ÒÒN O
;
ÒÒO P
var
ÚÚ 
queryResult
ÚÚ 
=
ÚÚ  !
string
ÚÚ" (
.
ÚÚ( )
Empty
ÚÚ) .
;
ÚÚ. /
using
ÙÙ 
(
ÙÙ 

HttpClient
ÙÙ  

httpclient
ÙÙ! +
=
ÙÙ, -
new
ÙÙ. 1

HttpClient
ÙÙ2 <
(
ÙÙ< =
)
ÙÙ= >
)
ÙÙ> ?
{
ıı 

httpclient
ˆˆ 
.
ˆˆ #
DefaultRequestHeaders
ˆˆ 4
.
ˆˆ4 5
Authorization
ˆˆ5 B
=
ˆˆC D
new
ˆˆE H'
AuthenticationHeaderValue
ˆˆI b
(
ˆˆb c
$str
ˆˆc j
,
ˆˆj k!
authenticationToken
ˆˆl 
)ˆˆ Ä
;ˆˆÄ Å!
HttpResponseMessage
¯¯ '
httpResponse
¯¯( 4
=
¯¯5 6
await
¯¯7 <

httpclient
¯¯= G
.
¯¯G H
	PostAsync
¯¯H Q
(
¯¯Q R

serviceUrl
¯¯R \
,
¯¯\ ]
encodedContent
¯¯^ l
)
¯¯l m
;
¯¯m n
try
˘˘ 
{
˙˙ 
httpResponse
˚˚ $
.
˚˚$ %%
EnsureSuccessStatusCode
˚˚% <
(
˚˚< =
)
˚˚= >
;
˚˚> ?
if
˝˝ 
(
˝˝ 
httpResponse
˝˝ (
.
˝˝( )
Content
˝˝) 0
is
˝˝1 3
object
˝˝4 :
&&
˝˝; =
httpResponse
˝˝> J
.
˝˝J K
Content
˝˝K R
.
˝˝R S
Headers
˝˝S Z
.
˝˝Z [
ContentType
˝˝[ f
.
˝˝f g
	MediaType
˝˝g p
==
˝˝q s
$str˝˝t Ü
)˝˝Ü á
{
˛˛ 
var
ˇˇ 
contentStream
ˇˇ  -
=
ˇˇ. /
await
ˇˇ0 5
httpResponse
ˇˇ6 B
.
ˇˇB C
Content
ˇˇC J
.
ˇˇJ K
ReadAsStreamAsync
ˇˇK \
(
ˇˇ\ ]
)
ˇˇ] ^
;
ˇˇ^ _
using
ÅÅ !
var
ÅÅ" %
streamReader
ÅÅ& 2
=
ÅÅ3 4
new
ÅÅ5 8
StreamReader
ÅÅ9 E
(
ÅÅE F
contentStream
ÅÅF S
)
ÅÅS T
;
ÅÅT U
using
ÇÇ !
var
ÇÇ" %

jsonReader
ÇÇ& 0
=
ÇÇ1 2
new
ÇÇ3 6
JsonTextReader
ÇÇ7 E
(
ÇÇE F
streamReader
ÇÇF R
)
ÇÇR S
;
ÇÇS T
JsonSerializer
ÑÑ *

serializer
ÑÑ+ 5
=
ÑÑ6 7
new
ÑÑ8 ;
JsonSerializer
ÑÑ< J
(
ÑÑJ K
)
ÑÑK L
;
ÑÑL M
var
ÜÜ 

resultJSON
ÜÜ  *
=
ÜÜ+ ,
JObject
ÜÜ- 4
.
ÜÜ4 5
Parse
ÜÜ5 :
(
ÜÜ: ;

serializer
ÜÜ; E
.
ÜÜE F
Deserialize
ÜÜF Q
(
ÜÜQ R

jsonReader
ÜÜR \
)
ÜÜ\ ]
.
ÜÜ] ^
ToString
ÜÜ^ f
(
ÜÜf g
)
ÜÜg h
)
ÜÜh i
;
ÜÜi j
foreach
àà #
(
àà$ %
var
àà% (
feature
àà) 0
in
àà1 3

resultJSON
àà4 >
[
àà> ?
$str
àà? I
]
ààI J
)
ààJ K
{
ââ 
var
ää  #
scene
ää$ )
=
ää* +
new
ää, /
SceneDetails
ää0 <
(
ää< =
)
ää= >
;
ää> ?
scene
ãã  %
.
ãã% &
sceneFeatureID
ãã& 4
=
ãã5 6
(
ãã7 8
string
ãã8 >
)
ãã> ?
feature
ãã? F
[
ããF G
$str
ããG K
]
ããK L
;
ããL M
scene
åå  %
.
åå% &
sceneSatellite
åå& 4
=
åå5 6
(
åå7 8
string
åå8 >
)
åå> ?
feature
åå? F
[
ååF G
$str
ååG S
]
ååS T
[
ååT U
$str
ååU ]
]
åå] ^
;
åå^ _
scene
çç  %
.
çç% &
	sceneDate
çç& /
=
çç0 1
(
çç2 3
string
çç3 9
)
çç9 :
feature
çç: A
[
ççA B
$str
ççB N
]
ççN O
[
ççO P
$str
ççP a
]
çça b
;
ççb c
scene
éé  %
.
éé% &
sceneResolution
éé& 5
=
éé6 7
(
éé8 9
double
éé9 ?
)
éé? @
feature
éé@ G
[
ééG H
$str
ééH T
]
ééT U
[
ééU V
$str
ééV l
]
éél m
;
éém n
scene
èè  %
.
èè% &
sceneCloudCover
èè& 5
=
èè6 7
(
èè8 9
double
èè9 ?
)
èè? @
feature
èè@ G
[
èèG H
$str
èèH T
]
èèT U
[
èèU V
$str
èèV b
]
èèb c
;
èèc d
scene
êê  %
.
êê% &
sceneOffNadir
êê& 3
=
êê4 5
(
êê6 7
double
êê7 =
)
êê= >
feature
êê> E
[
êêE F
$str
êêF R
]
êêR S
[
êêS T
$str
êêT c
]
êêc d
;
êêd e
if
íí  "
(
íí# $
scene
íí$ )
.
íí) *
sceneCloudCover
íí* 9
<=
íí: <

cloudCover
íí= G
&&
ííH J
scene
ííK P
.
ííP Q
sceneOffNadir
ííQ ^
<=
íí_ a
offNadir
ííb j
&&
íík m
scene
íín s
.
íís t
sceneResolutioníít É
<=ííÑ Ü

resolutionííá ë
)ííë í
scene
ìì$ )
.
ìì) *
sceneSelected
ìì* 7
=
ìì8 9
false
ìì: ?
;
ìì? @
List
ïï  $
<
ïï$ %
Coordinate2D
ïï% 1
>
ïï1 2
coords
ïï3 9
=
ïï: ;
new
ïï< ?
List
ïï@ D
<
ïïD E
Coordinate2D
ïïE Q
>
ïïQ R
(
ïïR S
)
ïïS T
;
ïïT U
foreach
ññ  '
(
ññ( )
var
ññ) ,
coordinates
ññ- 8
in
ññ9 ;
feature
ññ< C
[
ññC D
$str
ññD N
]
ññN O
[
ññO P
$str
ññP ]
]
ññ] ^
)
ññ^ _
foreach
óó$ +
(
óó, -
var
óó- 0

coordinate
óó1 ;
in
óó< >
coordinates
óó? J
)
óóJ K
coords
òò( .
.
òò. /
Add
òò/ 2
(
òò2 3
new
òò3 6
Coordinate2D
òò7 C
(
òòC D
(
òòD E
double
òòE K
)
òòK L

coordinate
òòL V
[
òòV W
$num
òòW X
]
òòX Y
,
òòY Z
(
òò[ \
double
òò\ b
)
òòb c

coordinate
òòc m
[
òòm n
$num
òòn o
]
òòo p
)
òòp q
)
òòq r
;
òòr s
ArcGIS
öö  &
.
öö& '
Core
öö' +
.
öö+ ,
Geometry
öö, 4
.
öö4 5
Polygon
öö5 <
polygon
öö= D
=
ööE F
PolygonBuilderEx
ööG W
.
ööW X
CreatePolygon
ööX e
(
ööe f
coords
ööf l
,
ööl m
SpatialReferences
öön 
.öö Ä
WGS84ööÄ Ö
)ööÖ Ü
;ööÜ á
scene
õõ  %
.
õõ% &
sceneGeometry
õõ& 3
=
õõ4 5
polygon
õõ6 =
;
õõ= >
scenes
ùù  &
.
ùù& '
Add
ùù' *
(
ùù* +
scene
ùù+ 0
)
ùù0 1
;
ùù1 2
}
ûû 
}
üü 
}
†† 
catch
†† 
(
†† 
	Exception
†† &
ex
††' )
)
††) *
{
°° 

MessageBox
¢¢ "
.
¢¢" #
Show
¢¢# '
(
¢¢' (
$str
¢¢( z
)
¢¢z {
;
¢¢{ |
}
££ 
}
§§ 
this
¶¶ 
.
¶¶ 

Dispatcher
¶¶ 
.
¶¶  
Invoke
¶¶  &
(
¶¶& '
(
¶¶' (
)
¶¶( )
=>
¶¶* ,
{
¶¶- .
GridSearchResult
ßß $
.
ßß$ %
ItemsSource
ßß% 0
=
ßß1 2
scenes
ßß3 9
;
ßß9 :
GridSearchResult
®® $
.
®®$ %
	IsEnabled
®®% .
=
®®/ 0
true
®®1 5
;
®®5 6
BtnClear
™™ 
.
™™ 
	IsEnabled
™™ &
=
™™' (
true
™™) -
;
™™- .
	BtnSearch
´´ 
.
´´ 
	IsEnabled
´´ '
=
´´( )
true
´´* .
;
´´. /
BtnLoad
¨¨ 
.
¨¨ 
	IsEnabled
¨¨ %
=
¨¨& '
true
¨¨( ,
;
¨¨, -
BtnSave
≠≠ 
.
≠≠ 
	IsEnabled
≠≠ %
=
≠≠& '
true
≠≠( ,
;
≠≠, -
}
ÆÆ 
)
ÆÆ 
;
ÆÆ 
}
ØØ 
else
∞∞ 
{
±± 

MessageBox
≤≤ 
.
≤≤ 
Show
≤≤ 
(
≤≤  
$str
≤≤  s
)
≤≤s t
;
≤≤t u
}
≥≥ 
}
¥¥ 	
private
∂∂ 
void
∂∂ 
BtnSave_Click
∂∂ "
(
∂∂" #
object
∂∂# )
sender
∂∂* 0
,
∂∂0 1
RoutedEventArgs
∂∂2 A
e
∂∂B C
)
∂∂C D
{
∑∑ 	
Stream
∏∏ 
stream
∏∏ 
;
∏∏ 
SaveFileDialog
ππ 
saveFileDialog1
ππ *
=
ππ+ ,
new
ππ- 0
SaveFileDialog
ππ1 ?
(
ππ? @
)
ππ@ A
;
ππA B
saveFileDialog1
ªª 
.
ªª 
Filter
ªª "
=
ªª# $
$str
ªª% R
;
ªªR S
saveFileDialog1
ºº 
.
ºº 
FilterIndex
ºº '
=
ºº( )
$num
ºº* +
;
ºº+ ,
saveFileDialog1
ΩΩ 
.
ΩΩ 
RestoreDirectory
ΩΩ ,
=
ΩΩ- .
true
ΩΩ/ 3
;
ΩΩ3 4
if
øø 
(
øø 
saveFileDialog1
øø 
.
øø  

ShowDialog
øø  *
(
øø* +
)
øø+ ,
==
øø- /
true
øø0 4
)
øø4 5
{
¿¿ 
if
¡¡ 
(
¡¡ 
(
¡¡ 
stream
¡¡ 
=
¡¡ 
saveFileDialog1
¡¡ -
.
¡¡- .
OpenFile
¡¡. 6
(
¡¡6 7
)
¡¡7 8
)
¡¡8 9
!=
¡¡: <
null
¡¡= A
)
¡¡A B
{
¬¬ 
stream
√√ 
.
√√ 
Write
√√  
(
√√  !
Encoding
√√! )
.
√√) *
ASCII
√√* /
.
√√/ 0
GetBytes
√√0 8
(
√√8 9
$str
√√9 n
)
√√n o
)
√√o p
;
√√p q
foreach
≈≈ 
(
≈≈ 
SceneDetails
≈≈ )
scene
≈≈* /
in
≈≈0 2
scenes
≈≈3 9
)
≈≈9 :
stream
∆∆ 
.
∆∆ 
Write
∆∆ $
(
∆∆$ %
Encoding
∆∆% -
.
∆∆- .
ASCII
∆∆. 3
.
∆∆3 4
GetBytes
∆∆4 <
(
∆∆< =
scene
«« !
.
««! "
sceneSatellite
««" 0
+
««1 2
$str
««3 6
+
««7 8
scene
»» !
.
»»! "
	sceneDate
»»" +
+
»», -
$str
»». 1
+
»»2 3
scene
…… !
.
……! "
sceneResolution
……" 1
+
……2 3
$str
……4 7
+
……8 9
scene
   !
.
  ! "
sceneCloudCover
  " 1
+
  2 3
$str
  4 7
+
  8 9
scene
ÀÀ !
.
ÀÀ! "
sceneOffNadir
ÀÀ" /
+
ÀÀ0 1
$str
ÃÃ  
)
ÕÕ 
)
ÕÕ 
;
ÕÕ 
stream
œœ 
.
œœ 
Close
œœ  
(
œœ  !
)
œœ! "
;
œœ" #
}
–– 
}
—— 
}
““ 	
}
”” 
}‘‘ á
5D:\Workspace\personal\repo\DockpaneSearchViewModel.cs
	namespace 	
TAGCatalogoImagens
 
{ 
internal 
class #
DockpaneSearchViewModel *
:+ ,
DockPane- 5
{ 
private 
const 
string 
_dockPaneID (
=) *
$str+ F
;F G
	protected #
DockpaneSearchViewModel )
() *
)* +
{, -
}. /
internal   
static   
void   
Show   !
(  ! "
)  " #
{!! 	
DockPane"" 
pane"" 
=""  
FrameworkApplication"" 0
.""0 1
DockPaneManager""1 @
.""@ A
Find""A E
(""E F
_dockPaneID""F Q
)""Q R
;""R S
if## 
(## 
pane## 
==## 
null## 
)## 
return$$ 
;$$ 
pane&& 
.&& 
Activate&& 
(&& 
)&& 
;&& 
}'' 	
}(( 
internal-- 
class-- %
DockpaneSearch_ShowButton-- ,
:--- .
Button--/ 5
{.. 
	protected// 
override// 
void// 
OnClick//  '
(//' (
)//( )
{00 	#
DockpaneSearchViewModel11 #
.11# $
Show11$ (
(11( )
)11) *
;11* +
}22 	
}33 
}44 ˛
%D:\Workspace\personal\repo\Module1.cs
	namespace'' 	
TAGCatalogoImagens''
 
{(( 
internal44 

class44 
Module144 
:44 
Module44 !
{55 
private66 
static66 
Module166 
_this66  
=66! "
null66# '
;66' (
public;; 

static;; 
Module1;; 
Current;; !
=>;;" $
_this;;% *
??=;;+ .
(;;/ 0
Module1;;0 7
);;7 8 
FrameworkApplication;;8 L
.;;L M

FindModule;;M W
(;;W X
$str;;X s
);;s t
;;;t u
	protectedBB 
overrideBB 
boolBB 
	CanUnloadBB %
(BB% &
)BB& '
{CC 
returnFF 
trueFF 
;FF 
}GG 
}KK 
}LL 